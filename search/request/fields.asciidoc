[[search-request-fields]]
=== Fields

Allows to selectively load specific stored fields for each document represented
by a search hit.

[source,js]
--------------------------------------------------
{
    "fields" : ["user", "postDate"],
    "query" : {
        "term" : { "user" : "kimchy" }
    }
}
--------------------------------------------------

`*` can be used to load all stored fields from the document.

An empty array will cause only the `_id` and `_type` for each hit to be
returned, for example:

[source,js]
--------------------------------------------------
{
    "fields" : [],
    "query" : {
        "term" : { "user" : "kimchy" }
    }
}
--------------------------------------------------


For backwards compatibility, if the fields parameter specifies fields which are not stored (`store` mapping set to
`false`), it will load the `_source` and extract it from it. This functionality has been replaced by the
<<search-request-source-filtering,source filtering>> parameter.

Script fields can also be automatically detected and used as fields, so
things like `_source.obj1.obj2` can be used, though not recommended, as
`obj1.obj2` will work as well.

[[partial]]
==== Partial

deprecated[1.0.0Beta1,Replaced by <<search-request-source-filtering>>]


When loading data from `_source`, partial fields can be used to use
wildcards to control what part of the `_source` will be loaded based on
`include` and `exclude` patterns. For example:

[source,js]
--------------------------------------------------
{
    "query" : {
        "match_all" : {}
    },
    "partial_fields" : {
        "partial1" : {
            "include" : "obj1.obj2.*",
        }
    }
}
--------------------------------------------------

And one that will also exclude `obj1.obj3`:

[source,js]
--------------------------------------------------
{
    "query" : {
        "match_all" : {}
    },
    "partial_fields" : {
        "partial1" : {
            "include" : "obj1.obj2.*",
            "exclude" : "obj1.obj3.*"
        }
    }
}
--------------------------------------------------

Both `include` and `exclude` support multiple patterns:

[source,js]
--------------------------------------------------
{
    "query" : {
        "match_all" : {}
    },
    "partial_fields" : {
        "partial1" : {
            "include" : ["obj1.obj2.*", "obj1.obj4.*"],
            "exclude" : "obj1.obj3.*"
        }
    }
}
--------------------------------------------------
