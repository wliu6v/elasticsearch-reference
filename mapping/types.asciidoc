[[mapping-types]]
== Field datatypes

Elasticsearch supports a number of different datatypes for the fields in a
document:

[float]
=== Core datatypes

<<string>>::    `string`
<<number>>::    `long`, `integer`, `short`, `byte`, `double`, `float`
<<date>>::      `date`
<<boolean>>::   `boolean`
<<binary>>::    `binary`

[float]
=== Complex datatypes

<<array>>::     Array support does not require a dedicated `type`
<<object>>::    `object` for single JSON objects
<<nested>>::    `nested` for arrays of JSON objects

[float]
=== Geo dataypes

<<geo-point>>::     `geo_point` for lat/lon points
<<geo-shape>>::     `geo_shape` for complex shapes like polygons

[float]
=== Specialised datatypes

<<ip>>::            `ip` for IPv4 addresses
<<search-suggesters-completion,Completion datatype>>::
                    `completion` to provide auto-complete suggestions
<<token-count>>::   `token_count` to count the number of tokens in a string

Attachment datatype::

    See the https://github.com/elastic/elasticsearch-mapper-attachments[mapper attachment plugin]
    which supports indexing ``attachments'' like Microsoft Office formats, Open
    Document formats, ePub, HTML, etc. into an `attachment` datatype.

[[field-conflicts]]
[IMPORTANT]
.Fields are shared across mapping types
=========================================

Mapping types are used to group fields, but the fields in each mapping type
are not independent of each other. Fields with:

* the _same name_
* in the _same index_
* in _different mapping types_
* map to the _same field_ internally,
* and *must have the same mapping*.

If a `title` field exists in both the `user` and `blogpost` mapping types, the
`title` fields must have exactly the same mapping in each type.  The only
exceptions to this rule are the <<copy-to>>, <<dynamic>>, <<enabled>>,
<<ignore-above>>, <<include-in-all>>, and <<properties>> parameters, which may
have different settings per field.

Usually, fields with the same name also contain the same type of data, so
having the same mapping is not a problem.  When conflicts do arise, these can
be solved by choosing more descriptive names, such as `user_title` and
`blog_title`.

=========================================

include::types/array.asciidoc[]

include::types/binary.asciidoc[]

include::types/boolean.asciidoc[]

include::types/date.asciidoc[]

include::types/geo-point.asciidoc[]

include::types/geo-shape.asciidoc[]

include::types/ip.asciidoc[]

include::types/nested.asciidoc[]

include::types/numeric.asciidoc[]

include::types/object.asciidoc[]

include::types/string.asciidoc[]

include::types/token-count.asciidoc[]






