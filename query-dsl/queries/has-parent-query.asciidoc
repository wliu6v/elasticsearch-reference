[[query-dsl-has-parent-query]]
=== Has Parent Query

The `has_parent` query works the same as the
<<query-dsl-has-parent-filter,has_parent>>
filter, by automatically wrapping the filter with a constant_score (when
using the default score type). It has the same syntax as the
<<query-dsl-has-parent-filter,has_parent>>
filter. 

[source,js]
--------------------------------------------------
{
    "has_parent" : {
        "parent_type" : "blog",
        "query" : {
            "term" : {
                "tag" : "something"
            }
        }
    }
}
--------------------------------------------------

[float]
==== Scoring capabilities

The `has_parent` also has scoring support. The
supported score types are `score` or `none`. The default is `none` and
this ignores the score from the parent document. The score is in this
case equal to the boost on the `has_parent` query (Defaults to 1). If
the score type is set to `score`, then the score of the matching parent
document is aggregated into the child documents belonging to the
matching parent document. The score type can be specified with the
`score_type` field inside the `has_parent` query:

[source,js]
--------------------------------------------------
{
    "has_parent" : {
        "parent_type" : "blog",
        "score_type" : "score",
        "query" : {
            "term" : {
                "tag" : "something"
            }
        }
    }
}
--------------------------------------------------

[float]
==== Memory Considerations

With the current implementation, all `_parent` field values and all `_id`
field values of parent documents are loaded into memory (heap) via field data
in order to support fast lookups, so make sure there is enough memory for it.
